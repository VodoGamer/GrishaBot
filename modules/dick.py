from datetime import datetime
from random import randint

from vkbottle.bot import Blueprint, Message

from modules.models import Chat, User


bp = Blueprint("Dick")


@bp.on.chat_message(regex=("(?i)^(!|\.|\/)?\s*(–ø–∏—Å—é–Ω|–º–æ—è –ø–∏—Å—è|–ø–∏—Å—è|—á–ª–µ–Ω)$"))
async def get_balance(message: Message):
    user = User(message.peer_id, message.from_id)
    await message.reply(f"–ü–∏—Å—é–Ω {await user.get_mention('gent')} "
                        f"–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {user.dick_size} —Å–º",
                        disable_mentions=True)


@bp.on.chat_message(
    regex=
("(?i)^(!|\.|\/)?\s*(–Ω–∞–º–∞–∑–∞—Ç—å|–ø–æ–º–∞–∑–∞—Ç—å)\s*(—Å–æ–¥(—É|–æ–π))?(—á–ª–µ–Ω|–ø–∏—Å—é)?$"))
async def get_balance(message: Message):
    user = User(message.peer_id, message.from_id)
    now = datetime.now()
    size = randint(-10, 20)
    if user.last_dick == now.day:
        await message.reply("–ú–∞–∑–∞—Ç—å –ø–∏—Å—é–Ω –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏, "
                            "–Ω–∞—á–∏–Ω–∞—è —Å 00:00 –ø–æ –º—Å–∫")
        return
    user.update_last_dick(now.day)
    user.change_dick(size)
    if size > 0:
        word = "—É–≤–µ–ª–∏—á–∏–ª—Å—è"
    else:
        word = "—É–º–µ–Ω—å—à–∏–ª—Å—è"
        size = str(size)[1:]
    if int(size) == 0:
        await message.reply(f"–ü–∏—Å—é–Ω {await user.get_mention('gent')} "
                            f"—Å–µ–≥–æ–¥–Ω—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è",
                            disable_mentions=True)
    else:
        await message.reply(f"–ü–∏—Å—é–Ω {await user.get_mention('gent')} "
                            f"{word} –Ω–∞ {size} —Å–º",
                            disable_mentions=True)


@bp.on.chat_message(
    regex="(?i)^(!|\.|\/)?\s*(—Ç–æ–ø|—Å–ø–∏—Å–æ–∫)\s*(–ø–∏—Å—é–Ω–æ–≤|—á–ª–µ–Ω–æ–≤)$")
async def top_of_dicks(message: Message, match):
    chat = Chat(message.peer_id)
    if not chat.get_dicks_top():
        await message.reply("–ù–∏–∫—Ç–æ –Ω–µ –º–µ—Ä–∏—Ç—Å—è –ø–∏—Å—é–Ω–∞–º–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ üòî")
        return
    users_mentions = []
    for user in chat.get_dicks_top():
        user_info = User(chat.chat_id, user[0])
        users_mentions.append(
            f"{await user_info.get_mention()} | {user_info.dick_size} —Å–º")

    await message.answer(f"—Ç–æ–ø {match[-1]} –≤ —ç—Ç–æ–º —á–∞—Ç–µ:\n"
                         "{}".format('\n'.join(users_mentions)),
                         disable_mentions=True)
