from random import choice, randint
import asyncio

from vkbottle import Keyboard, Text
from vkbottle.bot import Blueprint, Message
from vkbottle.dispatch.rules.base import RegexRule, ReplyMessageRule

from modules.models import User, Sex


bp = Blueprint("Sex")


@bp.on.chat_message(RegexRule("(?i)—Å–µ–∫—Å|–ø–æ—Å–µ–∫—Å–∏–º"), ReplyMessageRule())
async def new_sex_request(message: Message):
    from_user = User(message.peer_id, message.from_id)
    to_user = User(message.peer_id, message.reply_message.from_id)
    if to_user.user_id < 0:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É
        await message.answer(f"{await from_user.get_mention()} —ë–±–Ω—É–ª—Å—è –∏ "
                             "–Ω–∞—á–∞–ª –µ–±–∞—Ç—å "
                             f"{await to_user.get_mention('gent')}üë≥‚Äç‚ôÇÔ∏è")
        return
    sex = Sex(message.peer_id, from_user.user_id)
    if sex.get_send():
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π —Å–µ–∫—Å —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        await message.reply("–£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π —Å–µ–∫—Å\n–ß—Ç–æ–±—ã "
                            "–∑–∞–∫–æ–Ω—á–∏—Ç—å –µ–≥–æ –Ω–∞–ø–∏—à–∏ -—Å–µ–∫—Å")
        return
    if sex.get_request():
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π —Å–µ–∫—Å —É –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        await message.answer(f"–£ {await to_user.get_mention('gent')} "
                             "–µ—Å—Ç—å –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π —Å–µ–∫—Å\n–ü–æ–ø—Ä–æ—Å–∏ –µ–≥–æ "
                             "–ø–æ—Å–∫–æ—Ä–µ–µ –ø–æ—Ç—Ä–∞—Ö–∞—Ç—å—Å—è")
        return
    # –ï—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ
    sex.start(to_user.user_id)
    KEYBOARD = Keyboard(inline=True)
    KEYBOARD.add(Text("–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è", payload={"sex": "agree"}))
    KEYBOARD.add(Text("–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", payload={"sex": "disagree"}))
    await message.answer(f"{await from_user.get_mention()} –ø—Ä–µ–¥–ª–æ–∂–∏–ª "
                         f"–ø–æ–Ω—è—à–∏—Ç—å—Å—è {await to_user.get_mention('datv')}",
                         keyboard=KEYBOARD)


@bp.on.chat_message(payload={"sex": "agree"})
async def sex_agree(message: Message):
    # Inits
    sex = Sex(message.peer_id, message.from_id)
    if sex.get_request() is None:
        return
    sex_recipient = User(message.peer_id, sex.from_user)
    sex_sender = User(message.peer_id, sex.get_request())
    sex.discard_sex()

    words = ("–ø–æ–Ω—è—à–∏—Ç—å—Å—èüòä", "–≤ –∫—Ä–æ–≤–∞—Ç—åüõè", "–≤ –ø–æ—Å—Ç–µ–ª—åüõè", "–ø–æ—Ç—Ä–∞—Ö–∞—Ç—å—Å—èüîû",
             "–ø–æ—Ä–≤–∞—Ç—å –ø–æ–ø–∫—Éüòñ", "–ø–æ—Ä–≤–∞—Ç—å –ø–∏–∑–¥—Éüòñ")
    await message.answer(f"{await sex_sender.get_mention()} —Å–æ–±–ª–∞–∑–Ω–∏–ª "
                         f"{await sex_recipient.get_mention('accs')} "
                         f"{choice(words)}",
                         disable_mentions=True)
    await asyncio.sleep(2)
    if randint(1, 3) == 1:
        await message.answer(f"{await sex_sender.get_mention()} –∏ "
                             f"{await sex_recipient.get_mention()} "
                             "–Ω–∞—á–∞–ª–∏ —Ä–∞–∑–¥–µ–≤–∞—Ç—å—Å—è",
                             disable_mentions=True)
    else:
        words = ("–Ω–∞—á–∞–ª —Å–Ω–∏–º–∞—Ç—å –æ–¥–µ–∂–¥—Éüëô —Å", "–Ω–∞—á–∞–ª —Ä–∞–∑—Ä—ã–≤–∞—Ç—å –æ–¥–µ–∂–¥—Éüëô")
        await message.answer(f"{await sex_sender.get_mention()} "
                             f"{choice(words)} "
                             f"{await sex_recipient.get_mention('accs')}",
                             disable_mentions=True)
    await asyncio.sleep(3)
    await message.answer(f"–ü–æ—Å–ª–µ –¥–æ–ª–≥–∏—Ö —Ä–∞–∑–¥—É–º–∏–π "
                         f"{await sex_sender.get_mention()} –∏ "
                         f"{await sex_recipient.get_mention()} "
                         f"–≤—ã–±—Ä–∞–ª–∏ —Å–µ–∫—Å –≤ –ø–æ–∑–µ {randint(1, 100)}",
                         "photo-194020282_457239082",
                         disable_mentions=True)
    await asyncio.sleep(3)
    words = ("–Ω–æ–≥–∏ü¶µ", "–Ω–æ–∂–∫–∏ü¶µ", "—É—Ö–æüëÇ", "–Ω–æ—ÅüëÉ", "–ø—è—Ç–∫–∏ü¶∂", "—Å–æ—Å–æ–∫üîû", "—Å–∏—Å—å–∫–∏üîû",
             "—Ä—É–∫–∏üñê", "–ø–∏–∑–¥—Éüîû", "—á–ª–µ–Ωüîû", "–∞–Ω–∞–ª—å–Ω—É—é –¥—ã—Ä–æ—á–∫—Éüîû", "–ª–∞–¥–æ—à–∫—Éüñê")
    await message.answer(f"{await sex_sender.get_mention()} –æ–±–ª–∏–∑–∞–ª "
                         f"{choice(words)} "
                         f"{await sex_recipient.get_mention('gent')}",
                         disable_mentions=True)
    await asyncio.sleep(2)
    if randint(1, 4) == 1:
        await message.answer(f"{await sex_sender.get_mention()} –¥–µ–ª–∞–µ—Ç "
                             "–Ω–µ–∂–Ω—ã–π –∫—É–Ω–∏–ª–∏–Ω–≥—É—Å "
                             f"{await sex_recipient.get_mention('datv')}",
                             disable_mentions=True)
    else:
        await message.answer(f"{await sex_recipient.get_mention()} –¥–µ–ª–∞–µ—Ç "
                             "–º–∏–Ω–µ—Ç "
                             f"{await sex_sender.get_mention('datv')}",
                             disable_mentions=True)
    await asyncio.sleep(2)
    await message.answer(f"{await sex_sender.get_mention()} "
                         f"–≤—Å—Ç–∞–≤–∏–ª —Å–≤–æ–∏ {sex_sender.dick_size} "
                         f"—Å–º –≤ {await sex_recipient.get_mention('gent')} üòñ",
                         disable_mentions=True)
    await asyncio.sleep(3)
    if randint(1, 5) != 1:
        words = ("–ø–æ–ø–∫—É", "–ø–∏—Å–µ—á–∫—É", "–ø–∏–∑–¥—É")
        await message.answer(f"{await sex_sender.get_mention()} "
                             f"–ø–æ—Ä–≤–∞–ª {choice(words)} "
                             f"{await sex_recipient.get_mention('gent')} üòñ",
                             disable_mentions=True)
        return
    await message.answer(f"{await sex_sender.get_mention()} "
                         "–∫–æ–Ω—á–∏–ª –≤ "
                         f"{await sex_recipient.get_mention('accs')} üò≥",
                         disable_mentions=True)
    if randint(1, 2) == 1:
        await message.answer(f"–£ {await sex_sender.get_mention('gent')} "
                             f"–∏ {await sex_recipient.get_mention('gent')} "
                             "–ø–æ—è–≤–∏–ª—Å—è —Ä–µ–±—ë–Ω–æ–∫ üò≥",
                             disable_mentions=True)


@bp.on.chat_message(payload={"sex": "disagree"})
async def sex_disagree(message: Message):
    from_user = User(message.peer_id, message.from_id)
    sex = Sex(message.peer_id, from_user.user_id)
    requset = sex.get_request()
    send = sex.get_send()
    if requset is None and send is None:
        return
    elif requset is None:
        partner = send
        sex.end_sex(partner)
    else:
        partner = requset
        sex.discard_sex()

    partner_info = User(message.peer_id, partner)
    if await from_user.get_sex() == 1:
        await message.answer(f"{await from_user.get_mention()} –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å "
                             "–æ—Ç —Å–µ–∫—Å–∞ —Å "
                             f"{await partner_info.get_mention('ablt')}")
    else:
        await message.answer(f"{await from_user.get_mention()} –æ—Ç–∫–∞–∑–∞–ª—Å—è "
                             "–æ—Ç —Å–µ–∫—Å–∞ —Å "
                             f"{await partner_info.get_mention('ablt')}")


@bp.on.chat_message(RegexRule(r"(?i)-\s{0,}—Å–µ–∫—Å"))
async def discard_sex_request(message: Message):
    from_user = User(message.peer_id, message.from_id)
    sex = Sex(message.peer_id, from_user.user_id)
    sex.discard_sex()
    sex.end_sex(sex.get_send())
    await message.reply(f"{await from_user.get_mention()} "
                        "–∑–∞–≤–µ—Ä—à–∏–ª –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–µ–∫—Å")
